---
- hosts: raspberry-pi
  name: "Install Docker"
  connection: ssh
  tasks:
    - name: "Update repositories cache and upgrade"
      ansible.builtin.apt:      
        update_cache: yes
        upgrade: "full"
      become: true
    - name: "Install docker prerequisites"
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      become: true
      vars:
        packages:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - apt-transport-https
        - bash-completion
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
    - name: "Add Docker's official GPG key"
      ansible.builtin.get_url:
        url:  https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
        dest: /usr/share/keyrings/docker.asc
        mode: a+r
      become: true
    - name: "Get architecture"
      ansible.builtin.command: dpkg --print-architecture
      register: device_arch
    - name: "Set up Docker's APT repository"
      ansible.builtin.apt_repository: 
        repo: "deb [arch={{ device_arch.stdout }} signed-by=/usr/share/keyrings/docker.asc] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: yes
      become: true
    - name: "Install Docker packages"
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      become: true
      vars:
        packages:
        - "docker-ce={{ docker_version }}"
        - "docker-ce-cli={{ docker_version }}"
        - "containerd.io"
        - "docker-buildx-plugin"
        - "docker-compose-plugin"
      notify:
        - docker start
    - name: "Create docker group"
      become: true
      ansible.builtin.group:
        name: docker
        state: present
    - name: "Add default user to docker group"
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        append: true
        groups: docker
  handlers:
    - name: docker start
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true